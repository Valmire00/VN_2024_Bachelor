diff --git a/build.mjs b/build.mjs
index b8c9143..a71c12a 100644
--- a/build.mjs
+++ b/build.mjs
@@ -1,87 +1,3 @@
-/*import StyleDictionary from 'style-dictionary';
-import fs from 'fs';
-import path from 'path';
-import { registerTransforms } from '@tokens-studio/sd-transforms';
-
-// Funktion zum Konvertieren der JSON-Daten in das Style Dictionary-Format
-function convertJsonToStyleDictionaryFormat(data) {
-  const result = {
-    properties: {}
-  };
-
-  // Rekursive Funktion zum Durchlaufen der JSON-Datenstruktur
-  function traverse(obj, path = []) {
-    Object.keys(obj).forEach(key => {
-      const value = obj[key];
-      if (value && typeof value === 'object' && !Array.isArray(value)) {
-        // Wenn das Objekt ein Token mit $value enthält
-        if (value.value !== undefined) {
-          let tokenName = path.concat(key).join('-');
-
-          // Entfernen Sie führende Zahlen
-          tokenName = tokenName.replace(/^\d+-/, '');
-
-          result.properties[tokenName] = { value: value.value };
-        } else {
-          // Rekursiv durchlaufen, wenn es sich um ein verschachteltes Objekt handelt
-          traverse(value, path.concat(key));
-        }
-      }
-    });
-  }
-
-  traverse(data);
-  return result;
-}
-
-// Definieren Sie den Pfad zur JSON-Datei
-const variablesPath = path.resolve('tokens/variables2json.json');
-
-// Laden der JSON-Datei
-const rawdata = fs.readFileSync(variablesPath);
-const jsonData = JSON.parse(rawdata);
-
-// Überprüfen Sie die Struktur der JSON-Daten
-console.log('Loaded JSON Data:', JSON.stringify(jsonData, null, 2));
-
-// Konvertieren der JSON-Daten
-const styleDictionaryData = convertJsonToStyleDictionaryFormat(jsonData);
-
-// Überprüfen Sie die konvertierten Daten
-console.log('Converted Style Dictionary Data:', JSON.stringify(styleDictionaryData, null, 2));
-
-// Schreiben der konvertierten Daten in eine neue Datei
-fs.writeFileSync('tokens/variables2json.json', JSON.stringify(styleDictionaryData, null, 2));
-
-// Style Dictionary konfigurieren
-registerTransforms(StyleDictionary, {
-  casing: 'kebab',
-});
-
-const sd = StyleDictionary.extend({
-  source: ['tokens/variables2json.json'],
-  platforms: {
-    css: {
-      buildPath: 'dist/theme/',
-      files: [
-        {
-          destination: 'design.token.css',
-          format: 'css/variables',
-        },
-      ],
-      transformGroup: 'tokens-studio',
-    },
-  },
-});
-
-console.log('Build started...');
-sd.cleanAllPlatforms();
-console.log('\n======================================');
-sd.buildAllPlatforms();
-console.log('\n======================================');
-console.log('\nBuild completed!\n');
-
-*/
 // build.mjs
 import StyleDictionary from 'style-dictionary';
 import fs from 'fs';
diff --git a/hallo.js b/hallo.js
deleted file mode 100644
index e69de29..0000000
diff --git a/tokens/variablesToken2.json b/tokens/variablesToken2.json
index 7e34859..4b9fda6 100644
--- a/tokens/variablesToken2.json
+++ b/tokens/variablesToken2.json
@@ -1,8 +1,5 @@
 {
   "properties": {
-    "theme-variables-vuestic-light-accent-va-primary": {
-      "value": "#154ec1"
-    },
     "theme-variables-vuestic-light-accent-va-secondary": {
       "value": "#767c88"
     },
